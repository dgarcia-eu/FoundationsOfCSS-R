install.packages("rtweet")
library(rtweet)
lookup_users(users = "nytimes", token=token)
library(rtweet)
lookup_users(users = "nytimes")
get_timeline(user="nytimes", n=10)
users <- lists_members(list_id = 34179516)
head(users)
library(dplyr)
users %>% filter(statuses_count >= 100 & followers_count >= 100) %>% sample_n(100) -> users
#Your Code Here
timeline <- get_timeline(user=users$user_id[1], n=200, include_rts = F, token=token)
timeline <- get_timeline(user=users$user_id[1], n=200, include_rts = F)
head(timeline)
timelines <- get_timelines(user=users$user_id, n=200, include_rts = F)
#Your code here
timelines <- get_timelines(user=users$user_id, n=200, include_rts = F)
#Your code here
library(rtweet)
library(dplyr)
glimpse(lookup_users(users = "nytimes"))
glimpse(get_timeline(user="nytimes", n=10))
timeline <- get_timeline(user=users$user_id[1], n=200, include_rts = F)
users <- lists_members(list_id = 34179516)
head(users)
library(dplyr)
users %>% filter(statuses_count >= 100 & followers_count >= 100) %>% sample_n(100) -> users
#Your Code Here
timeline <- get_timeline(user=users$user_id[1], n=200, include_rts = F)
head(timeline)
load("usersdf.RData")  #in case you could not get data above, this file has 100 random US congress members
hist(usersdf$followers_count)
hist(log(usersdf$followers_count))
#Your code here
plot(log(usersdf$followers_count), log(usersdf$mnRT), xlab="log followers", ylab="log SI")
#Your code here
usersdf$SI <- log(usersdf$mnRT)
usersdf$FC <- log(usersdf$followers_count)
model <- lm(SI ~ FC, data=usersdf)
#Your code here
model$coefficients
#Your code here
plot(log(usersdf$followers_count), log(usersdf$mnRT), xlab="log followers", ylab="log SI")
abline(model$coefficients[1], model$coefficients[2], col="red")
#Your code here
residuals <- usersdf$SI - model$fitted.values
var(residuals)
var(usersdf$SI)
1-var(residuals)/var(usersdf$SI)
hist(residuals)
library(boot)
library(rtweet)
load("usersdf.RData")  #in case you could not get data above, this file has 100 random US congress members
hist(usersdf$followers_count)
hist(log(usersdf$followers_count))
#Your code here
plot(log(usersdf$followers_count), log(usersdf$mnRT), xlab="log followers", ylab="log SI")
#Your code here
usersdf$SI <- log(usersdf$mnRT)
usersdf$FC <- log(usersdf$followers_count)
model <- lm(SI ~ FC, data=usersdf)
#Your code here
model$coefficients
#Your code here
plot(log(usersdf$followers_count), log(usersdf$mnRT), xlab="log followers", ylab="log SI")
abline(model$coefficients[1], model$coefficients[2], col="red")
#Your code here
residuals <- usersdf$SI - model$fitted.values
var(residuals)
var(usersdf$SI)
1-var(residuals)/var(usersdf$SI)
hist(residuals)
ids <- sample(nrow(usersdf), replace=T)
bootmodel <- lm(usersdf$SI[ids]~usersdf$FC[ids])
bootmodel
bootVs <- rep(0, 10000)
for (i in seq(1,10000))
{
ids <- sample(nrow(usersdf), replace=T)
bootmodel <- lm(usersdf$SI[ids]~usersdf$FC[ids])
bootVs[i] <- bootmodel$coefficients[2]
} # How can you do this with the boot() function?
hist(bootVs, xlim=range(c(bootVs, model$coefficients[2])))
abline(v=model$coefficients[2], lty=2, col="green", lwd=2)
library(boot)
regCoef <- function(df, ids)
{
bootmodel <- lm(df$SI[ids]~df$FC[ids])
return(bootmodel$coefficients[2])
}
bootRes <- boot(data=usersdf, statistic = regCoef, R = 10000)
hist(bootRes$t, xlim=range(c(bootRes$t, model$coefficients[2])))
abline(v=model$coefficients[2], lty=2, col="green", lwd=2)
mean(bootRes$t)
length(bootRes$t0)
length(bootRes$t)
sd(bootRes$t)
sd(bootVs)
library(rtweet)
load("usersdf.RData")  #in case you could not get data above, this file has 100 random US congress members
hist(usersdf$followers_count)
hist(log(usersdf$followers_count))
#Your code here
usersdf$SI <- log(usersdf$mnRT)
usersdf$FC <- log(usersdf$followers_count)
model <- lm(SI ~ FC, data=usersdf)
#Your code here
model$coefficients
#Your code here
plot(log(usersdf$followers_count), log(usersdf$mnRT), xlab="log followers", ylab="log SI")
abline(model$coefficients[1], model$coefficients[2], col="red")
#Your code here
ids <- sample(nrow(usersdf), replace=T)
bootmodel <- lm(usersdf$SI[ids]~usersdf$FC[ids])
bootmodel
bootVs <- rep(0, 10000)
for (i in seq(1,10000))
{
ids <- sample(nrow(usersdf), replace=T)
bootmodel <- lm(usersdf$SI[ids]~usersdf$FC[ids])
bootVs[i] <- bootmodel$coefficients[2]
} # How can you do this with the boot() function?
hist(bootVs, xlim=range(c(bootVs, model$coefficients[2])))
abline(v=model$coefficients[2], lty=2, col="green", lwd=2)
library(boot)
? boot
nrow(usersdf)
library(boot)
bootSlope <- function(df, ids)
{
bootmodel <- lm(df$SI[ids]~usersdf$FC[ids])
return(bootmodel$coefficients[2])
}
bootRes <- boot(data = usersdf, statistic = bootSlope, R = 10000)
head(bootRes$t)
hist(bootRes$t)
hist(bootVs, xlim=range(c(bootVs, model$coefficients[2])))
abline(v=model$coefficients[2], lty=2, col="green", lwd=2)
hist(bootVs, xlim=range(c(bootVs, model$coefficients[2])))
abline(v=model$coefficients[2], lty=2, col="green", lwd=2)
library(boot)
bootSlope <- function(df, ids)
{
bootmodel <- lm(df$SI[ids]~usersdf$FC[ids])
return(bootmodel$coefficients)
}
bootRes <- boot(data = usersdf, statistic = bootSlope, R = 10000)
library(boot)
bootSlope <- function(df, ids)
{
bootmodel <- lm(df$SI[ids]~df$FC[ids])
return(bootmodel$coefficients)
}
bootRes <- boot(data = usersdf, statistic = bootSlope, R = 10000)
head(bootRes$t)
library(boot)
bootSlope <- function(df, ids)
{
bootmodel <- lm(df$SI[ids]~df$FC[ids])
return(bootmodel$coefficients[2])
}
bootRes <- boot(data = usersdf, statistic = bootSlope, R = 10000)
hist(bootRes$t, xlim=range(c(bootRes$t, model$coefficients[2])))
abline(v=model$coefficients[2], lty=2, col="green", lwd=2)
